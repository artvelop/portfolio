{"version":3,"sources":["reportWebVitals.ts","components/common/TyphoGraphy.tsx","components/common/Container.tsx","constants/color.ts","constants/profile.ts","components/common/Wrapper.tsx","components/common/PreviewImage.tsx","components/common/ChipItem.tsx","pages/intro/components/Profile.tsx","pages/intro/components/Description.tsx","pages/intro/components/Project1/Project1.tsx","pages/intro/components/Project2/Project2.tsx","pages/intro/components/Project3/Project3.tsx","pages/intro/components/Project4/Project4.tsx","pages/intro/components/Project5/Project5.tsx","pages/intro/Intro.tsx","Root.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TyphoGraphy","children","type","color","textAlign","fontWeight","fontHeight","onClick","pointer","changeTypeFontSize","useMemo","TypoGraphyText","styled","div","props","Container","Layout","customColor","profile","Wrapper","topVisible","Wrap","WindowTop","CircleButton","Box","top","PreviewImage","url","height","LayoutWrapper","Item","src","window","open","img","ChipItem","label","Chip","variant","Profile","FlexBox","LeftBox","ProfileImage","NameBox","RightBox","DescriptionForm","icon","size","text","Description","Between","Project1","Content","ImageSlider","style","display","gap","justifyContent","ChipContent","Project2","Project3","Project4","Project5","Gap","Footer","Intro","Root","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bed05a2e.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useMemo } from 'react';\nimport styled from '@emotion/styled';\n\ntype TypoGraphyProps = {\n  type?:\n    | 'title'\n    | 'h1'\n    | 'h2'\n    | 'h3'\n    | 'h4'\n    | 'body1'\n    | 'body2'\n    | 'sm1'\n    | 'sm2';\n  color?: string;\n  textAlign?: 'left' | 'center' | 'right';\n  fontWeight?: string;\n  fontHeight?: string;\n  onClick?: () => void;\n  pointer?: boolean;\n};\n\ntype StyledTypoGraphyProps = {\n  type:\n    | '48'\n    | '32'\n    | '24'\n    | '22'\n    | '20'\n    | '18'\n    | '14'\n    | '12'\n    | '10'\n    | '8'\n    | '16';\n  color?: string;\n  textAlign?: 'left' | 'center' | 'right';\n  fontWeight?: string;\n  fontHeight?: string;\n  pointer?: boolean;\n};\n\nexport const TyphoGraphy: React.FC<TypoGraphyProps> = ({\n  children,\n  type,\n  color,\n  textAlign,\n  fontWeight,\n  fontHeight,\n  onClick,\n  pointer = false,\n}) => {\n  const changeTypeFontSize = useMemo(() => {\n    switch (type) {\n      case 'title':\n        return '48';\n      case 'h1':\n        return '24';\n      case 'h2':\n        return '22';\n      case 'h3':\n        return '20';\n      case 'h4':\n        return '18';\n      case 'body1':\n        return '16';\n      case 'body2':\n        return '14';\n      case 'sm1':\n        return '10';\n      case 'sm2':\n        return '8';\n      default:\n        return '16';\n    }\n  }, [type]);\n\n  return (\n    <TypoGraphyText\n      pointer={pointer}\n      onClick={onClick}\n      type={changeTypeFontSize}\n      color={color || '#333333'}\n      textAlign={textAlign || 'left'}\n      fontWeight={fontWeight || 'normal'}\n      fontHeight={fontHeight || 'normal'}>\n      {children}\n    </TypoGraphyText>\n  );\n};\n\nconst TypoGraphyText = styled.div<StyledTypoGraphyProps>`\n  font-family: 'SCDream';\n  ${(props) => props.pointer && 'cursor: pointer;'};\n  font-size: ${(props) => props.type}px;\n  color: ${(props) => props.color};\n  text-align: ${(props) => props.textAlign};\n  font-weight: ${(props) => props.fontWeight};\n  ${(props) =>\n    props.fontHeight === 'normal' ? '' : `line-height: ${props.fontHeight};`}\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const Container = ({ children }: Props) => {\n  return <Layout>{children}</Layout>;\n};\n\nconst Layout = styled.div`\n  width: 1024px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: 16px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n","type Color = {\n  black: string;\n  gray: string;\n  skyGray: string;\n  white: string;\n  hashtag: string;\n};\n\nexport const customColor: Color = {\n  black: '#181818',\n  skyGray: '#e5e5e5',\n  gray: '#343434',\n  white: '#ffffff',\n  hashtag: '#3f729B',\n};\n","type ProfileType = {\n  img: string;\n  name: string;\n  phone: string;\n  mail: string;\n  github: string;\n  birthDay: string;\n};\n\nexport const profile: ProfileType = {\n  img: 'https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/profile.jpeg',\n  name: '신동철 (artvelop)',\n  phone: '010-6256-4734',\n  mail: 'richcode99@gmail.com',\n  github: 'https://github.com/artvelop',\n  birthDay: '1999.01.30',\n};\n","import styled from '@emotion/styled';\nimport { customColor } from 'constants/index';\nimport React from 'react';\n\ntype Props = {\n  topVisible?: boolean;\n};\n\ntype StyleProps = {\n  color: string;\n};\n\ntype BoxStyleProps = {\n  top: boolean;\n};\n\nexport const Wrapper: React.FC<Props> = ({ children, topVisible = true }) => {\n  return (\n    <Wrap>\n      {topVisible && (\n        <WindowTop>\n          <CircleButton color=\"#f25330\" />\n          <CircleButton color=\"#FEBB34\" />\n          <CircleButton color=\"#5CBA73\" />\n        </WindowTop>\n      )}\n      <Box top={topVisible}>{children}</Box>\n    </Wrap>\n  );\n};\n\nconst Wrap = styled.div``;\n\nconst WindowTop = styled.div`\n  display: flex;\n  background-color: #3f3f3f;\n  height: 12px;\n  padding-left: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n`;\n\nconst CircleButton = styled.div<StyleProps>`\n  cursor: pointer;\n  background-color: ${(props) => props.color};\n  width: 12px;\n  height: 12px;\n  border-radius: 50px;\n  margin-right: 8px;\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst Box = styled.div<BoxStyleProps>`\n  border-radius: 4px;\n  ${(props) =>\n    props.top && 'border-top-left-radius: 0px; border-top-right-radius: 0px;'}\n  background-color: ${customColor.white};\n  box-shadow: 0px 8px 40px rgba(0, 0, 0, 0.05);\n  padding: 16px;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\ntype Props = {\n  url: string;\n  height?: string;\n};\n\ntype StyleItemProps = {\n  height: string;\n};\n\nexport const PreviewImage: React.FC<Props> = ({ url, height = '400px' }) => {\n  const moveDetail = () => window.open(url, '_blank');\n\n  return (\n    <LayoutWrapper>\n      <Item src={url} onClick={moveDetail} height={height} />\n    </LayoutWrapper>\n  );\n};\n\nconst LayoutWrapper = styled.div`\n  display: flex;\n`;\n\nconst Item = styled.img<StyleItemProps>`\n  border-radius: 4px;\n  cursor: pointer;\n  height: ${(props) => props.height};\n`;\n","import styled from '@emotion/styled';\nimport { Chip } from '@mui/material';\nimport React from 'react';\n\ntype Props = {\n  label: string;\n};\n\nexport const ChipItem: React.FC<Props> = ({ label }) => {\n  return (\n    <Wrap>\n      <Chip\n        label={label}\n        color=\"secondary\"\n        variant=\"outlined\"\n        onClick={() => {}}\n      />\n    </Wrap>\n  );\n};\n\nconst Wrap = styled.div`\n  margin-right: 8px;\n  margin-bottom: 8px;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {\n  AiOutlinePhone,\n  AiOutlineMail,\n  AiOutlineGithub,\n  AiOutlineTag,\n} from 'react-icons/ai';\nimport { TyphoGraphy, Wrapper } from 'components/common';\nimport { customColor, profile } from 'constants/index';\nimport { Description } from '.';\n\nexport const Profile = () => {\n  return (\n    <Wrapper topVisible={false}>\n      <FlexBox>\n        <LeftBox>\n          <ProfileImage />\n          <NameBox>\n            <TyphoGraphy type=\"body1\" color={customColor.white}>\n              {profile.name}\n            </TyphoGraphy>\n          </NameBox>\n        </LeftBox>\n        <RightBox>\n          <TyphoGraphy type=\"title\" color={customColor.gray}>\n            FRONT DEVELOPER\n          </TyphoGraphy>\n          <DescriptionForm>\n            <Description\n              icon={<AiOutlinePhone size=\"36px\" />}\n              text={profile.phone}\n            />\n            <Description\n              icon={<AiOutlineMail size=\"36px\" />}\n              text={profile.mail}\n            />\n            <Description\n              icon={<AiOutlineGithub size=\"36px\" />}\n              text={profile.github}\n            />\n            <Description\n              icon={<AiOutlineTag size=\"36px\" />}\n              text={profile.birthDay}\n            />\n          </DescriptionForm>\n        </RightBox>\n      </FlexBox>\n    </Wrapper>\n  );\n};\n\nconst DescriptionForm = styled.div`\n  margin-top: 24px;\n`;\n\nconst RightBox = styled.div`\n  width: 100%;\n  border-radius: 4px;\n  padding: 16px;\n`;\n\nconst LeftBox = styled.div`\n  margin-right: 16px;\n`;\n\nconst FlexBox = styled.div`\n  display: flex;\n`;\n\nconst NameBox = styled.div`\n  background-color: ${customColor.gray};\n  border-radius: 4px;\n  width: 100%;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  margin-top: 16px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst ProfileImage = styled.div`\n  border-radius: 4px;\n  width: 256px;\n  height: 256px;\n  background-image: url(${profile.img});\n  background-size: cover;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { TyphoGraphy } from 'components/common';\nimport { customColor } from 'constants/index';\n\ntype Props = {\n  icon: React.ReactNode;\n  text: string;\n};\n\nexport const Description = ({ icon, text }: Props) => {\n  return (\n    <Wrapper>\n      {icon}\n      <Between />\n      <TyphoGraphy type=\"h1\" color={customColor.gray}>\n        {text}\n      </TyphoGraphy>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Between = styled.div`\n  margin-left: 8px;\n`;\n","import React from 'react';\nimport {\n  Wrapper,\n  TyphoGraphy,\n  PreviewImage,\n  ChipItem,\n} from 'components/common';\nimport { customColor } from 'constants/index';\nimport styled from '@emotion/styled';\nimport Chip from '@mui/material/Chip';\n\nexport const Project1: React.FC = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <TyphoGraphy type=\"title\" color={customColor.black}>\n          내친구 밸런스 게임\n        </TyphoGraphy>\n      </Content>\n      <ImageSlider>\n        <div style={{ display: 'flex', gap: '28px', justifyContent: 'center' }}>\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/fdbg/fdbg-introduce1.png\" />\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/fdbg/fdbg-introduce2.png\" />\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/fdbg/fdbg-introduce3.png\" />\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/fdbg/fdbg-introduce4.png\" />\n        </div>\n      </ImageSlider>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          아키텍처 & 인프라\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open(\n              'https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/fdbg/fdbg.png',\n              '_blank',\n            )\n          }>\n          https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/fdbg/fdbg.png\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          링크\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open(\n              'https://play.google.com/store/apps/details?id=com.fdbg&hl=KR&gl=KR',\n              '_blank',\n            )\n          }>\n          https://play.google.com/store/apps/details?id=com.fdbg&hl=KR&gl=KR\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          fontHeight=\"32px\"\n          onClick={() =>\n            window.open(\n              'https://artvelop.notion.site/ef7b2ac3bb29411dbffa8350f7db3854?v=9a4b91c2de6346628d5b530dab494284',\n              '_blank',\n            )\n          }>\n          이슈관리내역보기\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          프로젝트 소개\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          본인 스마트폰의 연락처에 저장된 친구들의 이름들을 가져와\n          <br />\n          질문을 통해 놓이는 상황에 대하여 더 나은 친구를 선택하는 일종의\n          가상대결 게임입니다.\n          <br />\n          유튜브에서 많은 인플루언서들이 밸런스게임을 자주하는 것을 보고 영감을\n          얻었고\n          <br />\n          자신의 친구들을 대상으로 밸런스게임을 진행하면 재밌을 것 같다는 생각에\n          만들게 되었습니다\n        </TyphoGraphy>\n      </Content>\n\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          느꼈던 점\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          일단 react-native는 자체적으로 기능을 제공하는게 많지 않아 라이브러리\n          또는 직접구현 해야하는 부분이 많다는 점에 불편함을 느꼈습니다.\n          <br />\n          또한 각 라이브러리 간의 버전호환문제도 많아서 네이티브에 대한 지식이\n          필수라고 느꼈던 것 같습니다\n          <br />\n          한가지 더 느낀점은 개인서버의 트래픽을 줄이기 위해 사용자 데이터를\n          왠만해선 클라이언트 단에서 관리하려고 노력을 했었는데\n          <br />\n          그 과정에서 렌더링 최적화와 어떻게 상태관리를 하느냐에 따라\n          클라이언트의 성능이 좌우되는지를 체감했던 것이 인상깊게 기억에\n          남습니다\n          <br />\n          <br />\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          Backend의 경우에는 서버비용을 줄이는데 집중하고자 serverless를\n          사용해서 개발을 했는데\n          <br />\n          전부터 관심있게 보던 nosql dynamoDB를 통해서 데이터를 저장하여\n          관리하였습니다\n          <br />\n          대규모의 유저들이 몰릴만한 프로젝트는 아니라고 생각하기 때문에\n          dynamoDB가 비용절감에도 굉장히 도움이 많이 되었고\n          <br />\n          유저 인증을 관리해주는 cognito와 엔드포인트를 관리해주는 api gateway를\n          도입해보면서 서버리스하게 개발하더라도\n          <br />\n          서버를 편하게 관리할 수 있도록 인프라를 구축하는 것이 가능하다는 것을\n          알게되었습니다.\n        </TyphoGraphy>\n      </Content>\n      <ChipContent>\n        <ChipItem label=\"typescript\" />\n        <ChipItem label=\"react-native\" />\n        <ChipItem label=\"DynamoDB\" />\n        <ChipItem label=\"serverless\" />\n        <ChipItem label=\"lambda\" />\n        <ChipItem label=\"api-gateway\" />\n        <ChipItem label=\"cognito\" />\n        <ChipItem label=\"cloudWatch\" />\n      </ChipContent>\n    </Wrapper>\n  );\n};\n\nconst ImageSlider = styled.div`\n  margin-top: 32px;\n`;\n\nconst Content = styled.div`\n  margin-top: 16px;\n`;\n\nconst ChipContent = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React from 'react';\nimport { Wrapper, TyphoGraphy, ChipItem } from 'components/common';\nimport { customColor } from 'constants/index';\nimport styled from '@emotion/styled';\n\nexport const Project2: React.FC = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <TyphoGraphy type=\"title\" color={customColor.black}>\n          PLAYAUTO - 프로모션 페이지 개발\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          아키텍처 & 인프라\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open(\n              'https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/plto/plto.pdf',\n              '_blank',\n            )\n          }>\n          https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/plto/plto.pdf\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          링크\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() => window.open('https://plto.com/', '_blank')}>\n          https://plto.com/\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open('https://plto.com/affiliate/Affiliate/', '_blank')\n          }>\n          https://plto.com/affiliate/Affiliate/\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open('https://plto.com/event/Event/', '_blank')\n          }>\n          https://plto.com/event/Event/\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          프로젝트 소개\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          마케팅 담당자가 이벤트 & 제휴관련 페이지를 백오피스에서 관리할 수 있고\n          <br />\n          진행중인 이벤트 & 제휴서비스를 사용자에게 보여줄 수 있도록 하는\n          프로젝트입니다.\n          <br />\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          느꼈던 점\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          DB, 백엔드, 프론트까지 책임을 지고 구현을 하면서 기획자, 마케팅부서,\n          디자이너와의 많은 소통을 통해\n          <br />\n          각 담당자들의 커뮤니케이션의 중요성을 많이 깨닫게 된 프로젝트입니다.\n          <br />\n          소통을 하면서 기획의도를 알아야 제가 개발을 하는데 수월하게 진행할 수\n          있다는 저 자신을 발견할 수 있었고\n          <br />\n          1:1로 논의를 하더라도 그 논의를 통해 기획에 변화가 생긴다면 공론화를\n          해야한다는 필요성을 많이 느낄 수 있었습니다\n          <br />\n          개발을 하는데 있어서는 기존에 구축된 환경에 기능을 추가하는 부분이었기\n          때문에 크게 어려움은 없었지만\n          <br />\n          DB설계를 하면서 지향하기위해 DB관리자와 오버엔지니어링을 중점을 두고\n          <br />\n          논의를 했던 부분이 추후에 제가 DB를 다룰 때 좋은 경험이 되었습니다\n        </TyphoGraphy>\n      </Content>\n      <ChipContent>\n        <ChipItem label=\"javascript\" />\n        <ChipItem label=\"mysql\" />\n        <ChipItem label=\"angular.js\" />\n        <ChipItem label=\"next.js\" />\n        <ChipItem label=\"actionhero\" />\n        <ChipItem label=\"aws-S3\" />\n      </ChipContent>\n    </Wrapper>\n  );\n};\n\nconst Content = styled.div`\n  margin-top: 16px;\n`;\n\nconst ChipContent = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React from 'react';\nimport {\n  Wrapper,\n  TyphoGraphy,\n  PreviewImage,\n  ChipItem,\n} from 'components/common';\nimport { customColor } from 'constants/index';\nimport styled from '@emotion/styled';\n\nexport const Project3: React.FC = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <TyphoGraphy type=\"title\" color={customColor.black}>\n          IWONDER - 자기소개 웹 플랫폼\n        </TyphoGraphy>\n      </Content>\n      <ImageSlider>\n        <div style={{ display: 'flex', gap: '28px', justifyContent: 'center' }}>\n          <PreviewImage\n            height=\"340px\"\n            url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/iwonder/iwonder_pc.png\"\n          />\n          <PreviewImage\n            height=\"340px\"\n            url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/iwonder/iwonder_mobile.png\"\n          />\n        </div>\n      </ImageSlider>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          아키텍처 & 인프라\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open(\n              'https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/iwonder/iwonder.png',\n              '_blank',\n            )\n          }>\n          https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/iwonder/iwonder.png\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          링크\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open('https://d87wrc0yd3m94.cloudfront.net/', '_blank')\n          }>\n          https://www.iwonder.link/\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          프로젝트 소개\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          자신이 어떤 사람인지 남들에게 공유할 수 있게 해주는\n          <br />\n          컨텐츠들이 모인 웹 플랫폼 입니다\n          <br />\n          태블릿PC는 아직 미지원 상태이며 PC환경과 모바일 환경에서만 지원됩니다\n        </TyphoGraphy>\n      </Content>\n\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          느꼈던 점\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          rollingpaper.site를 활용하여 카톡오픈채팅 하는 사람들이 많이 프로필에\n          공유하는 것을 보면서\n          <br />\n          웹을 통해 자신을 재밌게 소개하는걸 공유하는 플랫폼을 만들고 싶었습니다\n          <br />\n          seo최적화의 가능성을 열어두고 next.js를 사용하여 만들었고\n          <br />\n          그동안 공부했던 serverless를 프로덕션에 적용해보면서 트래픽에 따라\n          적은 비용으로 서버를 운영할 수 있다는 점에서\n          <br />\n          serverless의 장점을 체감할 수 있었던 것 같습니다.\n          <br />\n          수익구조를 kakao adfit을 사용하여 광고수익으로 채택을 했는데\n          <br />\n          어떻게 하면 사용자 수를 늘릴까하고 고민을 하는 과정에서\n          <br />\n          기획자, 디자이너, 마케터 등 비전공자의 입장을 좀 더 이해할 수 있게\n          되었습니다\n        </TyphoGraphy>\n      </Content>\n      <ChipContent>\n        <ChipItem label=\"typescript\" />\n        <ChipItem label=\"mysql\" />\n        <ChipItem label=\"next.js\" />\n        <ChipItem label=\"serverless\" />\n        <ChipItem label=\"aws-s3\" />\n        <ChipItem label=\"cloudwatch\" />\n        <ChipItem label=\"api-gateway\" />\n      </ChipContent>\n    </Wrapper>\n  );\n};\n\nconst ImageSlider = styled.div`\n  margin-top: 32px;\n`;\n\nconst Content = styled.div`\n  margin-top: 16px;\n`;\n\nconst ChipContent = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React from 'react';\nimport {\n  Wrapper,\n  TyphoGraphy,\n  PreviewImage,\n  ChipItem,\n} from 'components/common';\nimport { customColor } from 'constants/index';\nimport styled from '@emotion/styled';\n\nexport const Project4: React.FC = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <TyphoGraphy type=\"title\" color={customColor.black}>\n          웹 인터렉션 페이지\n          <br /> BROSWER RENDERING PROCESS\n        </TyphoGraphy>\n      </Content>\n      <ImageSlider>\n        <div style={{ display: 'flex', gap: '28px', justifyContent: 'center' }}>\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/exhibition/render2.png\" />\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/exhibition/render3.png\" />\n        </div>\n      </ImageSlider>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          링크\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open('https://artvelop.github.io/crp-page/', '_blank')\n          }>\n          https://artvelop.github.io/crp-page/\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          프로젝트 소개\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          최근 리액트에서 많이 사용되는 애니메이션 라이브러리 framer을 이용하여\n          <br />\n          브라우저가 렌더링되는 과정을 한눈에 볼 수 있도록 인터렉션하게 표현한\n          <br />\n          인터렉티브 웹 페이지입니다\n        </TyphoGraphy>\n      </Content>\n      <ChipContent>\n        <ChipItem label=\"typescript\" />\n        <ChipItem label=\"react\" />\n        <ChipItem label=\"framer\" />\n      </ChipContent>\n    </Wrapper>\n  );\n};\n\nconst ImageSlider = styled.div`\n  margin-top: 32px;\n`;\n\nconst Content = styled.div`\n  margin-top: 16px;\n`;\n\nconst ChipContent = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React from 'react';\nimport {\n  Wrapper,\n  TyphoGraphy,\n  PreviewImage,\n  ChipItem,\n} from 'components/common';\nimport { customColor } from 'constants/index';\nimport styled from '@emotion/styled';\n\nexport const Project5: React.FC = () => {\n  return (\n    <Wrapper>\n      <Content>\n        <TyphoGraphy type=\"title\" color={customColor.black}>\n          한 줄 기록\n        </TyphoGraphy>\n      </Content>\n      <ImageSlider>\n        <div style={{ display: 'flex', gap: '28px', justifyContent: 'center' }}>\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/onelinediary/IOS5.5-1.jpg\" />\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/onelinediary/IOS5.5-2.jpg\" />\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/onelinediary/IOS5.5-3.jpg\" />\n          <PreviewImage url=\"https://artvelop.s3.ap-northeast-2.amazonaws.com/profile/onelinediary/IOS5.5-4.jpg\" />\n        </div>\n      </ImageSlider>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          링크\n        </TyphoGraphy>\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open(\n              'https://play.google.com/store/apps/details?id=com.onelinediary',\n              '_blank',\n            )\n          }>\n          ANDROID 플레이스토어\n        </TyphoGraphy>\n\n        <TyphoGraphy\n          color={customColor.hashtag}\n          pointer={true}\n          onClick={() =>\n            window.open(\n              'https://apps.apple.com/kr/app/%ED%95%9C-%EC%A4%84-%EA%B8%B0%EB%A1%9D/id1609388116',\n              '_blank',\n            )\n          }>\n          IOS 앱스토어\n        </TyphoGraphy>\n      </Content>\n      <Content>\n        <TyphoGraphy\n          type=\"h2\"\n          color={customColor.black}\n          fontHeight=\"48px\"\n          fontWeight=\"800\">\n          프로젝트 소개\n        </TyphoGraphy>\n        <TyphoGraphy type=\"h4\" color={customColor.black} fontHeight=\"24px\">\n          일기를 써야겠다고는 생각하지만 귀찮음 혹은 시간문제로\n          <br />\n          일기를 쓰지 못하는 사람들이\n          <br />\n          간단하게라도 쓸 수 있도록 만든 앱입니다\n        </TyphoGraphy>\n      </Content>\n      <ChipContent>\n        <ChipItem label=\"typescript\" />\n        <ChipItem label=\"react-native\" />\n        <ChipItem label=\"serverless\" />\n        <ChipItem label=\"aws-s3\" />\n      </ChipContent>\n    </Wrapper>\n  );\n};\n\nconst ImageSlider = styled.div`\n  margin-top: 32px;\n`;\n\nconst Content = styled.div`\n  margin-top: 16px;\n`;\n\nconst ChipContent = styled.div`\n  margin-top: 16px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Container } from 'components/common';\nimport { Profile } from './components';\nimport { Project1 } from './components/Project1';\nimport { Project2 } from './components/Project2';\nimport { Project3 } from './components/Project3';\nimport { Project4 } from './components/Project4';\nimport { Project5 } from './components/Project5';\n\nconst Intro = () => {\n  return (\n    <Container>\n      <Profile />\n      <Gap />\n      <Project5 />\n      <Gap />\n      <Project1 />\n      <Gap />\n      <Project4 />\n      <Gap />\n      <Project2 />\n      <Gap />\n      <Project3 />\n      <Footer />\n    </Container>\n  );\n};\n\nconst Gap = styled.div`\n  margin-top: 24px;\n`;\n\nconst Footer = styled.div`\n  margin-top: 240px;\n`;\n\nexport default Intro;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Intro from './pages/intro/Intro';\nimport './styles/index.css';\n\nconst Root = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Intro} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Root from './Root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}